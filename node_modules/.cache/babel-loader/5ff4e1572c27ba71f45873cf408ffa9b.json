{"ast":null,"code":"import axios from \"axios\";\nimport * as actions from \"../actions/index\";\nconst baseURL = \"https://fakestoreapi.com/products\";\n\nconst api = _ref => {\n  let {\n    dispatch\n  } = _ref;\n  return next => async action => {\n    if (action.type !== actions.productsApiCallBegan.type) return next(action);\n    const {\n      url,\n      method,\n      onStart,\n      onSuccess,\n      onError\n    } = action.payload;\n    if (onStart) dispatch({\n      type: onStart\n    });\n    next(action);\n\n    try {\n      const response = await axios.request({\n        baseURL,\n        url,\n        method\n      });\n      dispatch(actions.productsApiCallSuccess(response.data));\n      if (onSuccess) dispatch({\n        type: onSuccess,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch(actions.productsApiCallFailed(error.message));\n      if (onError) dispatch({\n        type: onError,\n        payload: error.message\n      });\n    }\n  };\n};\n\nexport default api;","map":{"version":3,"names":["axios","actions","baseURL","api","dispatch","next","action","type","productsApiCallBegan","url","method","onStart","onSuccess","onError","payload","response","request","productsApiCallSuccess","data","error","productsApiCallFailed","message"],"sources":["C:/Users/orcun/Desktop/ParsStore/src/redux/middleware/index.js"],"sourcesContent":["import axios from \"axios\";\r\nimport * as actions from \"../actions/index\";\r\nconst baseURL = \"https://fakestoreapi.com/products\";\r\n\r\nconst api =\r\n  ({ dispatch }) =>\r\n  (next) =>\r\n  async (action) => {\r\n    if (action.type !== actions.productsApiCallBegan.type) return next(action);\r\n\r\n    const { url, method, onStart, onSuccess, onError } = action.payload;\r\n\r\n    if (onStart) dispatch({ type: onStart });\r\n\r\n    next(action);\r\n\r\n    try {\r\n      const response = await axios.request({\r\n        baseURL,\r\n        url,\r\n        method,\r\n      });\r\n      dispatch(actions.productsApiCallSuccess(response.data));\r\n\r\n      if (onSuccess) dispatch({ type: onSuccess, payload: response.data });\r\n    } catch (error) {\r\n      dispatch(actions.productsApiCallFailed(error.message));\r\n\r\n      if (onError) dispatch({ type: onError, payload: error.message });\r\n    }\r\n  };\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,MAAMC,OAAO,GAAG,mCAAhB;;AAEA,MAAMC,GAAG,GACP;EAAA,IAAC;IAAEC;EAAF,CAAD;EAAA,OACCC,IAAD,IACA,MAAOC,MAAP,IAAkB;IAChB,IAAIA,MAAM,CAACC,IAAP,KAAgBN,OAAO,CAACO,oBAAR,CAA6BD,IAAjD,EAAuD,OAAOF,IAAI,CAACC,MAAD,CAAX;IAEvD,MAAM;MAAEG,GAAF;MAAOC,MAAP;MAAeC,OAAf;MAAwBC,SAAxB;MAAmCC;IAAnC,IAA+CP,MAAM,CAACQ,OAA5D;IAEA,IAAIH,OAAJ,EAAaP,QAAQ,CAAC;MAAEG,IAAI,EAAEI;IAAR,CAAD,CAAR;IAEbN,IAAI,CAACC,MAAD,CAAJ;;IAEA,IAAI;MACF,MAAMS,QAAQ,GAAG,MAAMf,KAAK,CAACgB,OAAN,CAAc;QACnCd,OADmC;QAEnCO,GAFmC;QAGnCC;MAHmC,CAAd,CAAvB;MAKAN,QAAQ,CAACH,OAAO,CAACgB,sBAAR,CAA+BF,QAAQ,CAACG,IAAxC,CAAD,CAAR;MAEA,IAAIN,SAAJ,EAAeR,QAAQ,CAAC;QAAEG,IAAI,EAAEK,SAAR;QAAmBE,OAAO,EAAEC,QAAQ,CAACG;MAArC,CAAD,CAAR;IAChB,CATD,CASE,OAAOC,KAAP,EAAc;MACdf,QAAQ,CAACH,OAAO,CAACmB,qBAAR,CAA8BD,KAAK,CAACE,OAApC,CAAD,CAAR;MAEA,IAAIR,OAAJ,EAAaT,QAAQ,CAAC;QAAEG,IAAI,EAAEM,OAAR;QAAiBC,OAAO,EAAEK,KAAK,CAACE;MAAhC,CAAD,CAAR;IACd;EACF,CAzBD;AAAA,CADF;;AA4BA,eAAelB,GAAf"},"metadata":{},"sourceType":"module"}