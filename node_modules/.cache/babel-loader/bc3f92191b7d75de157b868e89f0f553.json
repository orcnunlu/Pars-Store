{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\orcun\\\\Desktop\\\\React-E-Commerce-And-Admin-Panel\\\\src\\\\components\\\\admin\\\\charts\\\\monthly\\\\LineChart.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport class LineChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const options = {\n      maintainAspectRatio: false,\n      responsive: true,\n      plugins: {\n        legend: {\n          position: \"top\"\n        },\n        title: {\n          display: true,\n          text: \"Aylık Satış\"\n        }\n      }\n    };\n    const labels = [\"June\", \"July\", \"August\", \"September\"];\n    const data = {\n      labels,\n      datasets: [{\n        label: \"Total Sales\",\n        data: [755, 640, 800, 1286],\n        borderColor: \"rgb(255, 99, 132)\",\n        backgroundColor: \"rgba(255, 99, 132, 0.5)\"\n      }]\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        width: 250,\n        height: 300,\n        style: {\n          backgroundColor: \"#ffff\",\n          borderRadius: \"1vw\",\n          padding: \"8px\"\n        },\n        options: options,\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(LineChart);","map":{"version":3,"names":["React","Component","connect","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","register","LineChart","constructor","props","state","render","options","maintainAspectRatio","responsive","plugins","legend","position","title","display","text","labels","data","datasets","label","borderColor","backgroundColor","borderRadius","padding","mapStateToProps","mapDispatchToProps"],"sources":["C:/Users/orcun/Desktop/React-E-Commerce-And-Admin-Panel/src/components/admin/charts/monthly/LineChart.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nexport class LineChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const options = {\r\n      maintainAspectRatio: false,\r\n      responsive: true,\r\n      plugins: {\r\n        legend: {\r\n          position: \"top\",\r\n        },\r\n        title: {\r\n          display: true,\r\n          text: \"Aylık Satış\",\r\n        },\r\n      },\r\n    };\r\n    const labels = [\"June\", \"July\", \"August\", \"September\"];\r\n\r\n    const data = {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: \"Total Sales\",\r\n          data: [755, 640, 800, 1286],\r\n          borderColor: \"rgb(255, 99, 132)\",\r\n          backgroundColor: \"rgba(255, 99, 132, 0.5)\",\r\n        },\r\n      ],\r\n    };\r\n    return (\r\n      <>\r\n        <Line\r\n          width={250}\r\n          height={300}\r\n          style={{\r\n            backgroundColor: \"#ffff\",\r\n            borderRadius: \"1vw\",\r\n            padding: \"8px\",\r\n          }}\r\n          options={options}\r\n          data={data}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({});\r\n\r\nconst mapDispatchToProps = {};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LineChart);\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,KAAK,IAAIC,OADX,EAEEC,aAFF,EAGEC,WAHF,EAIEC,YAJF,EAKEC,WALF,EAMEC,KANF,EAOEC,OAPF,EAQEC,MARF,QASO,UATP;AAUA,SAASC,IAAT,QAAqB,iBAArB;;;AAEAR,OAAO,CAACS,QAAR,CACER,aADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,MAPF;AAUA,OAAO,MAAMG,SAAN,SAAwBb,SAAxB,CAAkC;EACvCc,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IAEA,KAAKC,KAAL,GAAa,EAAb;EACD;;EAEDC,MAAM,GAAG;IACP,MAAMC,OAAO,GAAG;MACdC,mBAAmB,EAAE,KADP;MAEdC,UAAU,EAAE,IAFE;MAGdC,OAAO,EAAE;QACPC,MAAM,EAAE;UACNC,QAAQ,EAAE;QADJ,CADD;QAIPC,KAAK,EAAE;UACLC,OAAO,EAAE,IADJ;UAELC,IAAI,EAAE;QAFD;MAJA;IAHK,CAAhB;IAaA,MAAMC,MAAM,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,QAAjB,EAA2B,WAA3B,CAAf;IAEA,MAAMC,IAAI,GAAG;MACXD,MADW;MAEXE,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,aADT;QAEEF,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,IAAhB,CAFR;QAGEG,WAAW,EAAE,mBAHf;QAIEC,eAAe,EAAE;MAJnB,CADQ;IAFC,CAAb;IAWA,oBACE;MAAA,uBACE,QAAC,IAAD;QACE,KAAK,EAAE,GADT;QAEE,MAAM,EAAE,GAFV;QAGE,KAAK,EAAE;UACLA,eAAe,EAAE,OADZ;UAELC,YAAY,EAAE,KAFT;UAGLC,OAAO,EAAE;QAHJ,CAHT;QAQE,OAAO,EAAEhB,OARX;QASE,IAAI,EAAEU;MATR;QAAA;QAAA;QAAA;MAAA;IADF,iBADF;EAeD;;AAjDsC;;AAmDzC,MAAMO,eAAe,GAAInB,KAAD,KAAY,EAAZ,CAAxB;;AAEA,MAAMoB,kBAAkB,GAAG,EAA3B;AACA,eAAenC,OAAO,CAACkC,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CvB,SAA7C,CAAf"},"metadata":{},"sourceType":"module"}